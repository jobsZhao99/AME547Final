
ur5:
  # Publish all joint states -----------------------------------
  joint_state_controller:
    type: joint_state_controller/JointStateController
    publish_rate: 50  

  # Position Controllers ---------------------------------------
  shoulder_pan_joint_controller:
    type: effort_controllers/JointPositionController
    joint: shoulder_pan_joint
    pid: {p: 1000.0, i: 0.0, d: 50.0, i_clamp_min: -10000,  i_clamp_max: 10000}
  shoulder_lift_joint_controller:
    type: effort_controllers/JointPositionController
    joint: shoulder_lift_joint
    pid: {p: 1000.0, i: 0.0, d: 50.0, i_clamp_min: -10000,  i_clamp_max: 10000}
  elbow_joint_controller:
    type: effort_controllers/JointPositionController
    joint: elbow_joint
    pid: {p: 1000.0, i: 0.0, d: 50.0, i_clamp_min: -10000,  i_clamp_max: 10000}
  wrist_1_joint_controller:
    type: effort_controllers/JointPositionController
    joint: wrist_1_joint
    pid: {p: 1000.0, i: 0.0, d: 50.0, i_clamp_min: -10000,  i_clamp_max: 10000}
  wrist_2_joint_controller:
    type: effort_controllers/JointPositionController
    joint: wrist_2_joint
    pid: {p: 1000.0, i: 0.0, d: 50.0, i_clamp_min: -10000,  i_clamp_max: 10000}
  wrist_3_joint_controller:
    type: effort_controllers/JointPositionController
    joint: wrist_3_joint
    pid: {p: 1000.0, i: 0.0, d: 50.0, i_clamp_min: -10000,  i_clamp_max: 10000}

# /gazebo_ros_control:

#     pid_gains: # Required because we're controlling a velocity interface
#       shoulder_pan_joint: {p: 200000,  d: 10, i: 0, i_clamp: 10}
#       shoulder_lift_joint: {p: 200000,  d: 10, i: 0, i_clamp: 10}
#       elbow_joint: {p: 200000,  d: 10, i: 0, i_clamp: 10}
#       wrist_1_joint: {p: 200000,  d: 10, i: 0, i_clamp: 10}
#       wrist_2_joint: {p: 200000,  d: 10, i: 0, i_clamp: 10}
#       wrist_3_joint: {p: 200000,  d: 10, i: 0, i_clamp: 10}


# shoulder_pan_joint
#       shoulder_lift_joint
#       elbow_joint
#       wrist_1_joint
#       wrist_2_joint
#       wrist_3_joint

# rosservice call /rrbot/controller_manager/load_controller "name:'joint_state_controller shoulder_pan_joint_controller shoulder_lift_joint_controller elbow_joint_controller'"


# rosservice call /ur5/controller_manager/load_controller "name:'joint_state_controller'"
# rosservice call /ur5/controller_manager/load_controller "name:'shoulder_pan_joint_controller'"
# rosservice call /ur5/controller_manager/load_controller "name:'shoulder_lift_joint_controller'"
# rosservice call /ur5/controller_manager/load_controller "name:'elbow_joint_controller'"
# rosservice call /ur5/controller_manager/load_controller "name:'wrist_1_joint_controller'"
# rosservice call /ur5/controller_manager/load_controller "name:'wrist_2_joint_controller'"
# rosservice call /ur5/controller_manager/load_controller "name:'wrist_3_joint_controller'"

# rosservice call /rrbot/controller_manager/switch_controller "{start_controllers: ['joint_state_controller','shoulder_pan_joint_controller','shoulder_lift_joint_controller','elbow_joint_controller','wrist_1_joint_controller','wrist_2_joint_controller','wrist_3_joint_controller'], stop_controllers: [], strictness: 2}"